grf {
    grfid: "YZ\AA\01";
    name: string(STR_NAME);
    desc: string(STR_DESC);
		url:  string(STR_GRF_URL);
    version: 262; //2.6.2
    min_compatible_version: 260;

//*basecosts
	param 0 { 
		param_buy {
				type: int;
				name: string(STR_PARAM_NAME_BASECOSTMODBUY);
				desc: string(STR_PARAM_DESC_BASECOSTMODBUY);
				min_value: 0;
				max_value: 4;
				def_value: 2;
				names: {
									0: string(STR_PARAM_VLOW);
									1: string(STR_PARAM_LOW);
				    			2: string(STR_PARAM_NORMAL);
									3: string(STR_PARAM_HIGH);
									4: string(STR_PARAM_VHIGH);
						};
				}
		}

//*runningcosts
	param 1 {
		param_run {
			type: int;
			name: string(STR_PARAM_RUN_NAME);
			desc: string(STR_PARAM_RUN_DESC);
			min_value: 0;
			max_value: 4;
			def_value: 2;
			names: {
								0: string(STR_PARAM_VLOW);
                1: string(STR_PARAM_LOW);
								2: string(STR_PARAM_NORMAL);
								3: string(STR_PARAM_HIGH);
                4: string(STR_PARAM_VHIGH);
			};
		}
	}
//*capacity
	param 2 {
				param_capacities {
						type: int;
						name: string(STR_PARAM_NAME_CAPACITY);
						desc: string(STR_PARAM_DESC_CAPACITY);
						min_value: 0;
						max_value: 4;
						def_value: 1;
						names: {
												0: string(STR_PERCENT, 100);
												1: string(STR_PERCENT, 150);
												2: string(STR_PERCENT, 200);
												3: string(STR_PERCENT, 250);
												4: string(STR_PARAM_CAP_CUSTOM);
						};
				}
		}
	param 3 {
			 param_custom_capacity {
						type: int;
						name: string(STR_PARAM_CUSTOMCAPACITY);
						desc: string(STR_PARAM_CUSTOMCAPACITYDESC);
						min_value: 1;
						max_value: 10;
						def_value: 1;

			 }
		}
	param 4 {
			 param_boost_rapid {
						type: int;
						name: string(STR_PARAM_BOOST_RAPID);
						desc: string(STR_PARAM_BOOST_RAPID_DESC);
						min_value: 0;
						max_value: 4;
						def_value: 0;

			 }
		}
//*sounds
	param 5 {
			 param_sound_effect {
						type: int;
						name: string(STR_PARAM_SOUND);
						desc: string(STR_PARAM_SOUND_DESC);
						min_value: 0;
						max_value: 2;
						def_value: 1;
						names: {
									0: string(STR_PARAM_SOUND_1);
									1: string(STR_PARAM_SOUND_2);
				    			2: string(STR_PARAM_SOUND_3);
						};
			 }
		}
//*hide logos
param 6 {
        param_hide_logo {
            type: bool;
            name: string(STR_PARAM_HIDE_LOGO);
            desc: string(STR_PARAM_HIDE_LOGO);
            bit:  0;
            def_value: 0;
            }
        }
//*disablers
	param 7 {
				param_disable_tokyo {
							type: bool;
							name: string(STR_PARAM_DISABLE_TOKYO);
							desc: string(STR_PARAM_DISABLE_TOKYO);
							bit:  0;
							def_value: 0;

				}
			}
	param 8 {
				param_disable_yokohama {
							type: bool;
							name: string(STR_PARAM_DISABLE_YOKOHAMA);
							desc: string(STR_PARAM_DISABLE_YOKOHAMA);
							bit:  0;
							def_value: 0;

				}
			}
	param 9 {
				param_disable_osaka {
							type: bool;
							name: string(STR_PARAM_DISABLE_OSAKA);
							desc: string(STR_PARAM_DISABLE_OSAKA);
							bit:  0;
							def_value: 0;

				}
			}
	param 10 {
		param_disable_kyoto {
					type: bool;
					name: string(STR_PARAM_DISABLE_KYOTO);
					desc: string(STR_PARAM_DISABLE_KYOTO);
					bit:  0;
					def_value: 0;

		}
			}
	param 11 {
		param_disable_nagoya {
					type: bool;
					name: string(STR_PARAM_DISABLE_NAGOYA);
					desc: string(STR_PARAM_DISABLE_NAGOYA);
					bit:  0;
					def_value: 0;

					}
			}
	param 12 {
		param_disable_sendai {
					type: bool;
					name: string(STR_PARAM_DISABLE_SENDAI);
					desc: string(STR_PARAM_DISABLE_SENDAI);
					bit:  0;
					def_value: 0;

					}
			}
	param 13 {
		param_disable_kobe {
					type: bool;
					name: string(STR_PARAM_DISABLE_KOBE);
					desc: string(STR_PARAM_DISABLE_KOBE);
					bit:  0;
					def_value: 0;

					}
		}
	param 14 {
		param_disable_fukuoka {
					type: bool;
					name: string(STR_PARAM_DISABLE_FUKUOKA);
					desc: string(STR_PARAM_DISABLE_FUKUOKA);
					bit:  0;
					def_value: 0;

					}
		}
	param 15 {
		param_disable_semiPrivate {
					type: bool;
					name: string(STR_PARAM_DISABLE_SEMI_MAJOR);
					desc: string(STR_PARAM_DISABLE_SEMI_MAJOR_DESC);
					bit:  0;
					def_value: 0;

					}
		}
	param 16 {
		param_disable_tokyu {
					type: bool;
					name: string(STR_PARAM_DISABLE_TOKYU);
					desc: string(STR_PARAM_DISABLE_TOKYU);
					bit:  0;
					def_value: 0;

					}
		}
	param 17 {
		param_disable_tobu {
					type: bool;
					name: string(STR_PARAM_DISABLE_TOBU);
					desc: string(STR_PARAM_DISABLE_TOBU);
					bit:  0;
					def_value: 0;
					}
			}
	param 18 {
		param_disable_seibu {
					type: bool;
					name: string(STR_PARAM_DISABLE_SEIBU);
					desc: string(STR_PARAM_DISABLE_SEIBU);
					bit:  0;
					def_value: 0;
					}
			}
	param 19 {
		param_disable_odakyu {
					type: bool;
					name: string(STR_PARAM_DISABLE_ODAKYU);
					desc: string(STR_PARAM_DISABLE_ODAKYU);
					bit:  0;
					def_value: 0;
					}
			}
	param 20 {
		param_disable_sotetsu {
					type: bool;
					name: string(STR_PARAM_DISABLE_SOTETSU);
					desc: string(STR_PARAM_DISABLE_SOTETSU);
					bit:  0;
					def_value: 0;
					}
			}
	param 21 {
		param_disable_keio {
					type: bool;
					name: string(STR_PARAM_DISABLE_KEIO);
					desc: string(STR_PARAM_DISABLE_KEIO);
					bit:  0;
					def_value: 0;
					}
			}
	param 22 {
		param_disable_keikyu {
					type: bool;
					name: string(STR_PARAM_DISABLE_KEIKYU);
					desc: string(STR_PARAM_DISABLE_KEIKYU);
					bit:  0;
					def_value: 0;
					}
			}
	param 23 {
		param_disable_keisei {
					type: bool;
					name: string(STR_PARAM_DISABLE_KEISEI);
					desc: string(STR_PARAM_DISABLE_KEISEI);
					bit:  0;
					def_value: 0;
					}
			}
//24 meitetsu
	param 25 {
		param_disable_hankyu {
					type: bool;
					name: string(STR_PARAM_DISABLE_HANKYU);
					desc: string(STR_PARAM_DISABLE_HANKYU);
					bit:  0;
					def_value: 0;
					}
			}
}
//*param based variables
	if (param_capacities == 0 || param_capacities == 1) {
		param_loading_1D = 10; // 1 door //
		param_loading_2D = 20; // 2 doors //
		param_loading_3D = 30; // 3 doors //
		param_loading_4D = 40; // 4 doors //
		param_loading_5D = 60; // 5 doors //
		param_loading_6D = 70; // 6 doors //
	}

	if (param_capacities == 2) {
		param_loading_1D = 20; // 1 door //
		param_loading_2D = 40; // 2 doors //
		param_loading_3D = 50; // 3 doors //
		param_loading_4D = 60; // 4 doors //
		param_loading_5D = 80; // 5 doors //
		param_loading_6D = 90; // 6 doors //
	}
	if (param_capacities == 3) {
		param_loading_1D = 30; // 1 door //
		param_loading_2D = 40; // 2 doors //
		param_loading_3D = 50; // 3 doors //
		param_loading_4D = 70; // 4 doors //
		param_loading_5D = 100; // 5 doors //
		param_loading_6D = 120; // 6 doors //
	}
	if (param_capacities == 4) {
		param_loading_1D = 40; // 1 door //
		param_loading_2D = 50; // 2 doors //
		param_loading_3D = 60; // 3 doors //
		param_loading_4D = 80; // 4 doors //
		param_loading_5D = 120; // 5 doors //
		param_loading_6D = 140; // 6  doors //
	}
//TODO Optimize with tertiary
	if (param_boost_rapid == 0) {
		boost_rapid_mod = 2;
	}
	if (param_boost_rapid == 1) {
		boost_rapid_mod = 3;
	}	
	if (param_boost_rapid == 2) {
		boost_rapid_mod = 4;
	}
	if (param_boost_rapid == 3) {
		boost_rapid_mod = 5;
	}
	if (param_boost_rapid == 4) {
		boost_rapid_mod = 6;
	}

	if (param_capacities == 0) {
		param_capacity_mod = 2;
	}
	if (param_capacities == 1) {
		param_capacity_mod = 3;
	}
	if (param_capacities == 2) {
		param_capacity_mod = 4;
	}
	if (param_capacities == 3) {
		param_capacity_mod = 5;
	}
	if (param_capacities == 4) {
		param_capacity_mod = param_custom_capacity;
	}

	if (param_buy == 0) { PURCHASE_COST_MOD = -1; }
	if (param_buy == 1) { PURCHASE_COST_MOD = 0; }
	if (param_buy == 2) { PURCHASE_COST_MOD = 1; }
	if (param_buy == 3) { PURCHASE_COST_MOD = 2; }
	if (param_buy == 4) { PURCHASE_COST_MOD = 3; }

	basecost {
		PR_BUILD_VEHICLE_TRAIN : 	param_buy -2;
		PR_BUILD_VEHICLE_WAGON: 	param_buy +3;
		//PR_RUNNING_TRAIN_STEAM: 	param_run +1;
		PR_RUNNING_TRAIN_DIESEL:	param_run +1;
		PR_RUNNING_TRAIN_ELECTRIC:	param_run +1;
	}

//*cargo aging
	local_cargo_age = 185; // Metro/commuter service. 
	express_cargo_age = 231; // Express and Q/reserved seat cars. Tickets cost more.
	ltd_express_cargo_age = 278; // only limited expresses. High ticket cost.
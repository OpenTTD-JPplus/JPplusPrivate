//purchase
  spriteset(tobu30000_purchase_c1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/Kanto/tobu/tobu30000/tobu30000.png"){ tmpl_purchase_1c(0, 0) }
  spriteset(tobu30000_purchase_c2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/Kanto/tobu/tobu30000/tobu30000.png"){ tmpl_purchase_2c(0, 75) }
  GRAPHIC_STACK_3(tobu30000_purchase, logo_tobu, tobu30000_purchase_c1, tobu30000_purchase_c2)
//livery 1
spriteset(tobu30000_front, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/Kanto/tobu/tobu30000/tobu30000.png"){ tmpl_std(0, 0) }
spriteset(tobu30000_end, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/Kanto/tobu/tobu30000/tobu30000.png"){ tmpl_std_rev(0, 25) }
spriteset(tobu30000_mot, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/Kanto/tobu/tobu30000/tobu30000.png"){ tmpl_std(0, 50) }
spriteset(tobu30000_mot_rev, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/Kanto/tobu/tobu30000/tobu30000.png"){ tmpl_std_rev(0, 50) }
spriteset(tobu30000_mot_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/Kanto/tobu/tobu30000/tobu30000.png"){ tmpl_symm(0, 75) }
spriteset(tobu30000_wag, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/Kanto/tobu/tobu30000/tobu30000.png"){ tmpl_symm(0, 100) }
spriteset(tobu30000_front_f, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/Kanto/tobu/tobu30000/tobu30000.png"){ tmpl_std_rev(0, 125) }
spriteset(tobu30000_end_f, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/Kanto/tobu/tobu30000/tobu30000.png"){ tmpl_std(0, 125) }

//*livery 1
//panto placer
//1
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_1,position_in_vehid_chain %6){
    0: tobu30000_mot_2;
    3: tobu30000_mot;
    tobu30000_wag;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_1_rev,position_in_vehid_chain_from_end %6 -1){
    0: tobu30000_mot_2;
    3: tobu30000_mot_rev;
    tobu30000_wag;
}
switch(FEAT_TRAINS, PARENT, sw_tobu30000_panto_placer_main_1,vehicle_is_reversed){
    1: sw_tobu30000_panto_placer_1_rev;
    sw_tobu30000_panto_placer_1;
}
//2
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_2,position_in_vehid_chain %3){
    0: tobu30000_mot_2;
    tobu30000_wag;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_2_rev,1-position_in_vehid_chain_from_end %3){
    0: tobu30000_mot_2;
    tobu30000_wag;
}
switch(FEAT_TRAINS, PARENT, sw_tobu30000_panto_placer_main_2,vehicle_is_reversed){
    1: sw_tobu30000_panto_placer_2_rev;
    sw_tobu30000_panto_placer_2;
}
//2
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_3,position_in_vehid_chain %3){
    1: tobu30000_mot_2;
    tobu30000_wag;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_3_rev,position_in_vehid_chain_from_end %3 -1){
    1: tobu30000_mot_2;
    tobu30000_wag;
}
switch(FEAT_TRAINS, PARENT, sw_tobu30000_panto_placer_main_3,vehicle_is_reversed){
    1: sw_tobu30000_panto_placer_3_rev;
    sw_tobu30000_panto_placer_3;
}
//panto controller
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_main,num_vehs_in_vehid_chain+1){
    5:sw_tobu30000_panto_placer_main_3;
    6..7:sw_tobu30000_panto_placer_main_2;
    8:sw_tobu30000_panto_placer_main_3;
    sw_tobu30000_panto_placer_main_1;
}

//fake head-end placer
switch(FEAT_TRAINS, SELF, sw_tobu30000_fake_placer,position_in_vehid_chain +1){
    5: tobu30000_front_f;
    6: tobu30000_end_f;
sw_tobu30000_panto_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_fake_placer_rev,position_in_vehid_chain_from_end ){
    5: tobu30000_end_f;
    6: tobu30000_front_f;
sw_tobu30000_panto_placer_main;
}
switch(FEAT_TRAINS, PARENT, sw_tobu30000_fake_placer_gfx,vehicle_is_reversed){
    1: sw_tobu30000_fake_placer_rev;
    sw_tobu30000_fake_placer;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_fake_placer_main,num_vehs_in_vehid_chain>8 - 1){
    1: sw_tobu30000_fake_placer_gfx;
sw_tobu30000_panto_placer_main;
}

//front-end-fixer
switch(FEAT_TRAINS, SELF, sw_tobu30000_end_gfx_main,position_in_vehid_chain_from_end){
    0: tobu30000_end;
    default: sw_tobu30000_fake_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_front_gfx_main,position_in_vehid_chain_from_end){
    0: tobu30000_front;
    default: sw_tobu30000_fake_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_lv,vehicle_type_id){
    100..102:sw_tobu30000_end_gfx_main;
    sw_tobu30000_front_gfx_main;
}

//post fixers
//capacity-changer
switch(FEAT_TRAINS, SELF, sw_tobu30000_capacity_main,position_in_vehid_chain_from_end){
    0: 139;
    default: 153;
}
//power fix
switch(FEAT_TRAINS, SELF, sw_tobu30000_power_main,position_in_vehid_chain_from_end %5){
    1..2:return 190;
    4:return 190;
    return 0;
}
item(FEAT_TRAINS, tobu30000) {
    property {
        OVERRIDEN_TRAIN_DATA
        
        climates_available: param_disable_tobu == 0 ? ALL_CLIMATES : NO_CLIMATE;
        name: string(STR_TRAIN_NAME, string(STR_NAME_TOBU), "30000", string(STR_NAME_SERIES),);
        introduction_date: date(1996, 1, 1);
        model_life: VEHICLE_NEVER_EXPIRES;
        vehicle_life: 35;
        reliability_decay: 10;

        cost_factor: 21;
        running_cost_factor: 51;
        speed: 120 km/h;
        track_type: TR_1067_DC;
        power: 1 kW;
        weight: 34 ton;
    }
	graphics {
		additional_text:
				string(STR_TRAIN_DESC,
				string(STR_NARROWGAUGE),
				string(STR_DENKI, string(STR_DC_N, 1500)),
				string(STR_LOAD_SPEED, string(STR_DOORS, 4)),
				string(STR_FORMATION, string(STR_NUM_CARS_1, 10)),
				string(STR_USAGE, string(STR_COMMUTER)),
				string(STR_OPERATOR, string(STR_TOBU)));
		// cargo_subtype_text:sw_tobu30000_lv_desc;
		can_attach_wagon: sw_1067_attach_vehid;
		purchase: tobu30000_purchase;
		start_stop: sw_stop_start_3;
    purchase_power: sw_tobu30000_power_main()*4*1342/1000;

		SET_GRAPHICS_DOUBLE(sw_tobu30000_lv,//graphics
		sw_tobu30000_capacity_main()*param_capacity_mod/3,//cargo capacity
		sw_tobu30000_power_main()*4*1342/1000,//power
		param_loading_4D,//loading speed
		sw_empty_desc,//subtype
		mu_car_narrow,33)//car_fallback,weight
}